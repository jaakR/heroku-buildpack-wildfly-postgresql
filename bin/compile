#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# versions
POSTGRESQL_VERSION="42.2.1"
POSTGRESQL_SHA1="b7f61848ac43ae9fa6e38935bfd75628b7fc9086"

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

cd $BUILD_DIR

JBOSS_HOME=$BUILD_DIR/.jboss/wildfly-17.0.1.Final

: "${JBOSS_HOME:?You need to install Wildfly first. JBOSS_HOME environment variable not found.}"

echo "-----> Downloading postgresql connector from http://central.maven.org/maven2/org.postgresql/postgresql/${POSTGRESQL_VERSION}/postgresql-${POSTGRESQL_VERSION}.jar ... "
curl -O http://central.maven.org/maven2/org/postgresql/postgresql/${POSTGRESQL_VERSION}/postgresql-${POSTGRESQL_VERSION}.jar          
echo "-----> downloaded"
sha1sum postgresql-${POSTGRESQL_VERSION}.jar | grep $POSTGRESQL_SHA1 > /dev/null 2>&1
echo "-----> verified"

# 1) startup
echo "-----> Starting WildFly ... "
$JBOSS_HOME/bin/standalone.sh --admin-only &

WILDFLY_RUNNING=1

until [ $WILDFLY_RUNNING -eq 0 ]; do
	$JBOSS_HOME/bin/jboss-cli.sh --connect --command=":read-attribute(name=server-state)"
	WILDFLY_RUNNING=$?
	sleep 3
done	

# 2) create postgresql module
echo "-----> create postgresql module ... "
$JBOSS_HOME/bin/jboss-cli.sh --connect --command="module add --name=org.postgresql --resources=$BUILD_DIR/postgresql-$POSTGRESQL_VERSION.jar --dependencies=javax.api,javax.transaction.api"

# 3) install driver
echo "-----> install JDBC driver ... "
$JBOSS_HOME/bin/jboss-cli.sh --connect --command="/subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=org.postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)"

$JBOSS_HOME/bin/jboss-cli.sh --connect --command="/subsystem=datasources:installed-drivers-list"

# 4) install datasource
echo "-----> install data source ... "
echo "-----> export required env vars ... "

DATABASE_URL="$(cat "${ENV_DIR}/DATABASE_URL")"

proto="$(echo $DATABASE_URL | grep :// | sed -e's,^\(.*://\).*,\1,g')"
# remove the protocol
url="$(echo ${DATABASE_URL/$proto/})"
# extract the user (if any)
userpass="$(echo $url | grep @ | cut -d@ -f1)"
pass="$(echo $userpass | grep : | cut -d: -f2)"
if [ -n "$pass" ]; then
  user="$(echo $userpass | grep : | cut -d: -f1)"
else
    user=$userpass
fi

# extract the host
host="$(echo ${url/$user:$pass@/} | cut -d/ -f1)"
# by request - try to extract the port
port="$(echo $host | sed -e 's,^.*:,:,g' -e 's,.*:\([0-9]*\).*,\1,g' -e 's,[^0-9],,g')"
# extract port from host
host="$(echo ${host/:$port/} | cut -d/ -f1)"
# extract the path (if any)
path="$(echo $url | grep / | cut -d/ -f2-)"

PGUSER=$user
PGPASSWORD=$pass
PGHOST=$host
PGDATABASE=$path

#echo "-----> exporting PGUSER ${PGUSER} ... "
#echo "-----> exporting PGPASSWORD ${PGPASSWORD} ... "
#echo "-----> exporting PGHOST ${PGHOST} ... "
#echo "-----> exporting PGDATABASE ${PGDATABASE} ... "

for KEY in PGUSER PGPASSWORD PGHOST PGDATABASE; do
  [ -f $ENV_DIR/$KEY ] && export "$KEY=$(cat $ENV_DIR/$KEY)"
  [ -z "${!KEY}" ] && echo "You didn't set $KEY, and this is required." && exit 1
done

$JBOSS_HOME/bin/jboss-cli.sh --connect --command="data-source add --name=smartIDDataSource --driver-name=postgresql --jndi-name=java:/smartIDDataSource --driver-class=org.postgresql.Driver --user-name=$PGUSER --password=$PGPASSWORD --connection-url=jdbc:postgresql://$PGHOST:5432/$PGDATABASE?useSSL=true&requireSSL=true"

# 5) shutdown
echo "-----> shutdown WildFly ... "
$JBOSS_HOME/bin/jboss-cli.sh --connect command=:shutdown

echo "-----> done"